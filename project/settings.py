"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9bl7ijxp=m1q*3o6um#nyb0cd&j7b+4ue$99@y^5v6t%lka_&v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',

    # APPLICATIONS
    'location',
    'post',
    'comments',
    'followers',
    'profiles',

    # REST FRAMEWORK
    'rest_framework',
    'rest_framework.authtoken',
    'rest_registration',
    # authentication
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    
           

]


SITE_ID = 1

AUTHENTICATION_BACKENDS = [
     
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
   
]

REST_REGISTRATION = {
    'REGISTER_VERIFICATION_ENABLED': False,
    'RESET_PASSWORD_VERIFICATION_ENABLED': False,
    'REGISTER_EMAIL_VERIFICATION_ENABLED': False,
}

# REST_REGISTRATION = {
#     'REGISTER_VERIFICATION_URL': 'https://frontend-host/verify-user/',
#     'RESET_PASSWORD_VERIFICATION_URL': 'https://frontend-host/reset-password/',
#     'REGISTER_EMAIL_VERIFICATION_URL': 'https://frontend-host/verify-email/',

#     'VERIFICATION_FROM_EMAIL': 'no-reply@example.com',
# }

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

DJANGO_REST_PASSWORDRESET_TOKEN_CONFIG = {
    "CLASS": "profiles.tokens.RandomStringTokenGenerator"
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media_root')

CRYPT_KEY = b'67auCuzL-QSAE8ktnoUB3-CRN-4OHDF_kKjwymNwLVk='


PHONE_VERIFICATION = {
    "BACKEND": "profiles.backends.twilio.TwilioBackend",
    "OPTIONS": {
        "SID": "AC0ee5e4e8f8c2c1f304e96db83ff0ef9a",
        "SECRET": "2b7cf8e8e4ff66a7523e83b6595cab29",
        "FROM": "998998062951",
        "SANDBOX_TOKEN": "123456",
    },
    "TOKEN_LENGTH": 6,
    "MESSAGE": "Welcome to {app}! Please use security code {security_code} to proceed.",
    "APP_NAME": "Phone Verify",
    "SECURITY_CODE_EXPIRATION_TIME": 3600,  # In seconds only
    "VERIFY_SECURITY_CODE_ONLY_ONCE": False,  # If False, then a security code can be used multiple times for verification
}



# EMAIL CONFIGURATION

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'oybekfayziyev97@gmail.com'
EMAIL_HOST_PASSWORD = 'gzrqslomtfjlvarb'
DEFAULT_FROM_EMAIL = 'Python ecommerce <oybekfayziyev97@gmail.com>'

EMAIL_SUBJECT = 'Pyhton Instagram Practise'
EMAIL_MESSAGE = '''
Hello from {link}
<br/>
<br/>
<br/>
You're receiving this e-mail because you or someone else has requested a password for your user account.
It can be safely ignored if you did not request a password reset. Click the link below to reset your password.
<br />
<br/>
<a href="http://localhost:8000/api/profile/reset-password/confirm/{link_token}/">localhost:8000/api/profile/reset-password/confirm/{link_token}/</a>
<br />
<br/>
In case you forgot, your username is {username}.
Thank you for using {link}!
{link}


'''
